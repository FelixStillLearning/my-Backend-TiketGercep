
###################################################################
#                        USER API TESTS                          #
###################################################################

### Get All Users
GET http://localhost:5000/api/users

### Create User
POST http://localhost:5000/api/users/
Content-Type: application/json

{
    "username":"ghinklrsi",
    "email":"ghinova@gmail.com",
    "password":"12345678",
    "full_name":"Ghinova Klarisa Irawadi",
    "phone":"08123456789",
    "role":"user"
}

### Get User by ID
GET http://localhost:5000/api/users/1

### Update User
PATCH http://localhost:5000/api/users/1
Content-Type: application/json

{
    "username":"admin",
    "email":"admin@gmail.com",
    "password":"admin123",
    "full_name":"Admin Tiket Gercep",
    "phone":"08123456788",
    "role":"admin"
}

### Delete User
DELETE http://localhost:5000/api/users/1

###################################################################
#                        MOVIE API TESTS                         #
###################################################################

### Get All Movies
GET http://localhost:5000/api/movies

### Create Movie 1
POST http://localhost:5000/api/movies/
Content-Type: application/json

{
    "title":"Avatar: The Way of Water",
    "genre":"Action, Adventure, Fantasy",
    "duration":"192",
    "rating":"PG-13",
    "synopsis":"Jake Sully and Ney'tiri have formed a family and are doing everything to stay together.",
    "release_date":"2022-12-16",
    "status":"ended",
    "poster_url":"https://example.com/avatar2-poster.jpg"
}

### Create Movie 2
POST http://localhost:5000/api/movies/
Content-Type: application/json

{
    "title": "Oppenheimer",
    "genre": "Biography, Drama, History",
    "duration": "180",
    "rating": "R",
    "synopsis": "The story of American scientist J. Robert Oppenheimer and his role in the development of the atomic bomb.",
    "release_date": "2023-07-21",
    "status": "now_playing",
    "poster_url": "https://m.media-amazon.com/images/M/MV5BMTYyMjQ2NjY4OF5BMl5BanBnXkFtZTgwOTY1MzE0MDE@._V1_SX300.jpg"
}

### Create Movie 3
POST http://localhost:5000/api/movies/
Content-Type: application/json

{
    "title": "Mission: Impossible - Dead Reckoning Part Two",
    "genre": "Action, Adventure, Thriller",
    "duration": "155",
    "rating": "PG-13",
    "synopsis": "Ethan Hunt and his IMF team must track down a terrifying new weapon that threatens all of humanity before it falls into the wrong hands. The most dangerous mission they have ever faced begins.",
    "release_date": "2025-05-23",
    "status": "now_playing",
    "poster_url": "https://m.media-amazon.com/images/M/MV5BYmQ0YmY0OTItYTMyMy00YTljLTg5YjYtYjI3MDBhYTE1ZDM1XkEyXkFqcGdeQXVyMTEyMDY2NDYy._V1_SX300.jpg"
}

### Create Movie 4
POST http://localhost:5000/api/movies/
Content-Type: application/json

{
    "title": "Lilo & Stitch",
    "genre": "Adventure, Comedy, Family, Sci-Fi",
    "duration": "106",
    "rating": "PG",
    "synopsis": "A live-action retelling of the beloved 2002 animated film. A lonely girl named Lilo, living in Hawaii, befriends a creature she believes to be a dog. She names him Stitch, completely unaware that he is a dangerous genetic experiment who has escaped from an alien planet and crash-landed on Earth.",
    "release_date": "2025-05-23",
    "status": "now_playing",
    "poster_url": "http://www.impawards.com/2025/posters/lilo_and_stitch.jpg"
}

### Create Movie 5
POST http://localhost:5000/api/movies/
Content-Type: application/json

{
    "title": "The Fantastic Four",
    "genre": "Action, Adventure, Sci-Fi",
    "duration": "145",
    "rating": "PG-13",
    "synopsis": "Four astronauts gain superpowers after being exposed to cosmic radiation. They must learn to use their new abilities to protect the world from an enemy who was once their friend.",
    "release_date": "2025-07-25",
    "status": "coming_soon",
    "poster_url": "https://m.media-amazon.com/images/M/MV5BOWNkM2I4NGEtM2UzNi00MTI2LTk1ZmEtN2FmOGQ5MDQzYTk3XkEyXkFqcGdeQXVyMTEyMDY2NDYy._V1_SX300.jpg"
}

### Create Movie 6
POST http://localhost:5000/api/movies/
Content-Type: application/json

{
    "title": "Dune: Part Two",
    "genre": "Adventure, Drama, Sci-Fi",
    "duration": "155",
    "rating": "PG-13",
    "synopsis": "The epic conclusion of the Dune saga, where Paul Atreides unites with Chani and the Fremen while seeking revenge against those who destroyed his family.",
    "release_date": "2024-11-15",
    "status": "coming_soon",
    "poster_url": "https://m.media-amazon.com/images/M/MV5BMTYyMjQ2NjY4OF5BMl5BanBnXkFtZTgwOTY1MzE0MDE@._V1_SX300.jpg"
}

### Get Movie by ID
GET http://localhost:5000/api/movies/1

### Update Movie
PATCH http://localhost:5000/api/movies/1
Content-Type: application/json

{
    "title":"Avatar: The Way of Water (Updated)",
    "genre":"Action, Adventure, Fantasy, Sci-Fi",
    "duration":"192",
    "rating":"PG",
    "synopsis":"Updated synopsis for Avatar sequel."
}

### Delete Movie
DELETE http://localhost:5000/api/movies/1

###################################################################
#                       STUDIO API TESTS                         #
###################################################################

### Get All Studios
GET http://localhost:5000/api/studios

### Create Studio
POST http://localhost:5000/api/studios/
Content-Type: application/json

{
    "studio_name":"Studio A",
    "total_seats":"250",
    "rows":"10",
    "seats_per_row":"25"
}

### Get Studio by ID
GET http://localhost:5000/api/studios/1

### Update Studio
PATCH http://localhost:5000/api/studios/1
Content-Type: application/json

{
    "studio_name":"Studio A",
    "total_seats":"150",
    "rows":"10",
    "seats_per_row":"15"
}

### Delete Studio
DELETE http://localhost:5000/api/studios/1

###################################################################
#                        SEAT API TESTS                          #
###################################################################

### Get All Seats
GET http://localhost:5000/api/seats

### Create Seat
POST http://localhost:5000/api/seats/
Content-Type: application/json

{
    "studio_id":"1",
    "seat_row":"A",
    "seat_number":"1",
    "seat_label":"A1"
}

### Get Seat by ID
GET http://localhost:5000/api/seats/1

### Update Seat
PATCH http://localhost:5000/api/seats/1
Content-Type: application/json

{
    "seat_row":"A",
    "seat_number":"1",
    "seat_label":"A1"
}

### Delete Seat
DELETE http://localhost:5000/api/seats/1

###################################################################
#                      SHOWTIME API TESTS                        #
###################################################################

### Get All Showtimes
GET http://localhost:5000/api/showtimes

### Create Showtime
POST http://localhost:5000/api/showtimes/
Content-Type: application/json

{
    "movie_id":"1",
    "studio_id":"1",
    "show_date":"2024-01-15",
    "show_time":"19:30:00",
    "ticket_price":"50000"
}

### Get Showtime by ID
GET http://localhost:5000/api/showtimes/1

### Update Showtime
PATCH http://localhost:5000/api/showtimes/1
Content-Type: application/json

{
    "showtime_date":"2024-01-16",
    "showtime_time":"21:00:00",
    "price":"60000"
}

### Delete Showtime
DELETE http://localhost:5000/api/showtimes/1

###################################################################
#                      BOOKING API TESTS                         #
###################################################################

### Get All Bookings
GET http://localhost:5000/api/bookings

### Create Booking
POST http://localhost:5000/api/bookings/
Content-Type: application/json

{
    "user_id":"1",
    "showtime_id":"1",
    "booking_code":"ABC123",
    "total_seats":"2",
    "total_price":"100000",
    "booking_date":"2024-01-10",
    "status":"confirmed"
}

### Get Booking by ID
GET http://localhost:5000/api/bookings/1

### Update Booking
PATCH http://localhost:5000/api/bookings/1
Content-Type: application/json

{
    "status":"cancelled",
    "total_price":"0"
}

### Delete Booking
DELETE http://localhost:5000/api/bookings/1

###################################################################
#                    BOOKING SEAT API TESTS                      #
###################################################################

### Get All Booking Seats
GET http://localhost:5000/api/booking-seats

### Create Booking Seat (Link Booking to Seat)
POST http://localhost:5000/api/booking-seats/
Content-Type: application/json

{
    "booking_id":"1",
    "seat_id":"1"
}

### Get Booking Seat by ID
GET http://localhost:5000/api/booking-seats/1

### Update Booking Seat
PATCH http://localhost:5000/api/booking-seats/1
Content-Type: application/json

{
    "booking_id":"1",
    "seat_id":"2"
}

### Delete Booking Seat
DELETE http://localhost:5000/api/booking-seats/1

###################################################################
#                      ADVANCED QUERIES                          #
###################################################################

### Get Seats by Studio ID
GET http://localhost:5000/api/seats?studio_id=1

### Get Showtimes by Movie ID
GET http://localhost:5000/api/showtimes?movie_id=1

### Get Bookings by User ID
GET http://localhost:5000/api/bookings?user_id=1

### Get Available Seats for a Showtime
GET http://localhost:5000/api/seats/available?showtime_id=1

###################################################################
#                       HEALTH CHECK                             #
###################################################################

### Server Health Check
GET http://localhost:5000/api/health

